// Jest Snapshot v1, https://goo.gl/fbAQLP

<<<<<<< HEAD
exports[`portfolio-list tests renders correctly 1`] = `
<RCTScrollView
=======
exports[`stock-list tests renders correctly 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
>>>>>>> Created tests and updated snapshots
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
<<<<<<< HEAD
=======
  refreshControl={
    <RefreshControlMock
      colors={
        Array [
          "#004D40",
        ]
      }
      onRefresh={[Function]}
      refreshing={false}
    />
  }
>>>>>>> Created tests and updated snapshots
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
<<<<<<< HEAD
=======
  <RCTRefreshControl />
>>>>>>> Created tests and updated snapshots
  <View />
</RCTScrollView>
`;

<<<<<<< HEAD
exports[`portfolio-list tests renders correctly with error 1`] = `
=======
exports[`stock-list tests renders correctly with error 1`] = `
>>>>>>> Created tests and updated snapshots
<Text>
  Error! 
  Network connection failed
   
</Text>
`;

<<<<<<< HEAD
exports[`portfolio-list tests renders correctly with loading 1`] = `
=======
exports[`stock-list tests renders correctly with loading 1`] = `
>>>>>>> Created tests and updated snapshots
<View>
  <ActivityIndicator
    animating={true}
    color="#999999"
    hidesWhenStopped={true}
    size="large"
  />
</View>
`;

<<<<<<< HEAD
exports[`portfolio-list tests renders correctly with portfolio 1`] = `
<RCTScrollView
=======
exports[`stock-list tests renders correctly with refreshing 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  refreshControl={
    <RefreshControlMock
      colors={
        Array [
          "#004D40",
        ]
      }
      onRefresh={[Function]}
      refreshing={true}
    />
  }
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <RCTRefreshControl />
  <View />
</RCTScrollView>
`;

exports[`stock-list tests renders correctly with stocks 1`] = `
<RCTScrollView
  ItemSeparatorComponent={[Function]}
>>>>>>> Created tests and updated snapshots
  data={
    Array [
      Object {
        "balance": 500,
        "lastDayRevenue": 0.23,
        "name": "Portfolio1",
        "ownerId": "Jooni",
        "portfolioInfo": Object {
          "error": undefined,
          "loading": false,
          "portfolio": Object {
            "balance": 500,
            "lastDayRevenue": 0,
            "name": "Portfolio1",
            "ownerId": "Joooni",
            "stocks": Array [
              Object {
                "amount": 245,
                "avgPrice": 153.3,
                "lastDayRevenue": 0.52,
                "totalMarketValue": 2084,
                "totalRevenue": 0.54,
                "uid": "AMZN",
              },
              Object {
                "amount": 340,
                "avgPrice": 132,
                "lastDayRevenue": 0.52,
                "totalMarketValue": 2084,
                "totalRevenue": 0.54,
                "uid": "AAPL",
              },
            ],
            "totalMarketValue": 5000,
            "totalRevenue": -0.02,
            "uid": "Portfolio1",
          },
          "refreshing": false,
        },
        "totalMarketValue": 0.53,
        "totalRevenue": 0.25,
        "uid": "Portfolio1",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
<<<<<<< HEAD
=======
  refreshControl={
    <RefreshControlMock
      colors={
        Array [
          "#004D40",
        ]
      }
      onRefresh={[Function]}
      refreshing={false}
    />
  }
>>>>>>> Created tests and updated snapshots
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
<<<<<<< HEAD
=======
  <RCTRefreshControl />
>>>>>>> Created tests and updated snapshots
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "white",
<<<<<<< HEAD
              "borderColor": "#bcbbc1",
              "flexDirection": "row",
              "padding": 14,
=======
              "borderBottomWidth": 0,
              "borderColor": "#bcbbc1",
              "flex": 1,
              "flexDirection": "row",
              "padding": 14,
              "paddingLeft": 32,
              "paddingVertical": 16,
>>>>>>> Created tests and updated snapshots
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
<<<<<<< HEAD
            <Text
              style={
                Object {
                  "backgroundColor": "transparent",
                  "fontSize": 17,
                }
              }
              testID="listItemTitle"
              theme={
                Object {
                  "colors": Object {
                    "divider": "#bcbbc1",
                    "error": "#ff190c",
                    "grey0": "#393e42",
                    "grey1": "#43484d",
                    "grey2": "#5e6977",
                    "grey3": "#86939e",
                    "grey4": "#bdc6cf",
                    "grey5": "#e1e8ee",
                    "greyOutline": "#bbb",
                    "primary": "#2089dc",
                    "searchBg": "#303337",
                    "secondary": "#8F0CE8",
                  },
                }
              }
            >
              Portfolio1
            </Text>
=======
            <View
              style={
                Object {
                  "marginLeft": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#004D40",
                    "fontSize": 32,
                    "fontWeight": "bold",
                  }
                }
              >
                Portfolio1
              </Text>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "column",
                  "marginLeft": 16,
                  "marginTop": 24,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#004D40",
                    "fontSize": 24,
                    "marginBottom": 0,
                    "textAlign": "justify",
                  }
                }
              >
                Total revenue (%)
              </Text>
              <Text
                style={
                  Object {
                    "color": "#54c242",
                    "fontSize": 14,
                    "fontWeight": "bold",
                    "marginBottom": 7.847058823529411,
                    "marginTop": -3.9235294117647057,
                    "textAlign": "justify",
                  }
                }
              >
                +25.00 %
              </Text>
            </View>
          </View>
          <View
            width={16}
          />
          <View
            style={
              Object {
                "alignItems": "flex-end",
                "flex": 0.5,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "column",
                  "marginLeft": 16,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "#004D40",
                    "fontSize": 24,
                  }
                }
              >
                Revenue today
              </Text>
              <Text
                style={
                  Object {
                    "color": "#54c242",
                    "fontSize": 35.311764705882354,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  }
                }
              >
                +23.00 %
              </Text>
            </View>
>>>>>>> Created tests and updated snapshots
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
